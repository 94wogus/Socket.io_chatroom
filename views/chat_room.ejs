<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>
            Chat room
        </title>
    </head>
    <body onunload="discon()">
        <h2 id='your_id'>Your nickname: </h2>
        <select id="room_select">
            <option value="0">Room 0</option>
            <option value="1">Room 1</option>
            <option value="2">Room 2</option>
            <option value="3">Room 3</option>
            <option value="4">Room 4</option>
        </select>
        <form action='/' method='POST'>
            <input type='text' id='send_msg'>
            <input type='submit' value='Send'>
            <button id="discon">Disconnect</button>
        </form>
        <div width="700px" style="float:left; margin: 0px 50px 0px 0px">
            <ul id="chat_log" style="list-style: none;"></ul>
        </div>
        <div width="700px" style="float:right; margin: 0px 50px 0px 0px">
            <h3 id="room_number"></h3>
            <ul id="chat_member"></ul>
        </div>
        <script src='/socket.io/socket.io.js'></script>
        <script src='http://code.jquery.com/jquery-1.11.1.js'></script>
        <script>
            const usr_name = prompt("Input your name.");
            document.getElementById('your_id').innerHTML += usr_name;
            var room_num = 0;
            var socket = io();
            socket.emit('joinRoom', usr_name, room_num); // 최초 join
            document.getElementById('room_number').innerHTML = "Room " + room_num;
            $('#room_select').change(() => { // chat room 변경
                socket.emit('leaveRoom', usr_name, room_num); //callback function 있어도 되고 없어도 되고
                room_num = $('#room_select').val();
                $('#chat_log').empty();
                socket.emit('joinRoom', usr_name, room_num);
                document.getElementById('room_number').innerHTML = "Room " + room_num;
            });
            $('form').submit(() => { // message 전송
                socket.emit('chat message', $('#send_msg').val(), usr_name, room_num);
                $('#send_msg').val('');
                return false;
            });
            $('#discon').click(() => { //socket 연결 끊기(disconnection)
                socket.emit('leaveRoom', usr_name, room_num);
                $('#chat_log').empty();
                $('#chat_member').empty();
                document.getElementById('room_number').innerHTML = 'Bye';
                socket.disconnect();
            });
            socket.on('leaveRoom', (name, num, memberList) => {
                console.log('leave');
                $('#chat_log').append($('<li>').text('User ' + name + ' has left room ' + num));
                $('#chat_member').empty(); // room member 갱신
                for(var i=0 ; i<memberList.length ; i++){
                    $('#chat_member').append($('<li>').text(memberList[i]));
                }
            });
            socket.on('joinRoom', (name, num, memberList) => {
                console.log('join');
                $('#chat_log').append($('<li>').text('User ' + name + ' has joined room ' + num));
                $('#chat_member').empty(); // room member 갱신
                for(var i=0 ; i<memberList.length ; i++){
                    $('#chat_member').append($('<li>').text(memberList[i]));
                }
            });
            socket.on('chat message', (msg, name, num) => { // leave, join이랑 다르게 msg 값이 필요
                console.log('chat');
                if(name==usr_name){
                    console.log("my msg");
                    $('#chat_log').append($('<li style="text-align:right;">').text(name + ": " + msg));
                }
                else{
                    $('#chat_log').append($('<li style="text-align:left;">').text(name + ": " + msg));
                }
            });
            function discon() { //창이나 탭이 닫히면 socket 연결 끊기
                socket.emit('leaveRoom', usr_name, room_num);
                socket.disconnect();
            }   
        </script>
    </body>
</html>